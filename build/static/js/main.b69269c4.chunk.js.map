{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","root","margin","spacing","width","ClothingTypeInputForm","props","state","value","handleChange","bind","handleSubmit","event","this","setState","target","alert","preventDefault","onSubmit","Validate","autoComplete","TextField","onChange","required","id","label","React","Component","App","classes","useState","className","ThemeProvider","AppBar","position","style","backgroundColor","Toolbar","IconButton","edge","menuButton","color","aria-label","Typography","variant","title","Box","p","bgcolor","Button","rel","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAAe,I,uHCcTA,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cAYNE,EAAYC,aAAW,SAACP,GAAD,MAAY,CACvCQ,KAAM,CACJ,QAAS,CACPC,OAAQT,EAAMU,QAAQ,GACtBC,MAAO,a,IAoCPC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,MAAO,IAErB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBALH,E,gDAQnB,SAAaE,GACXC,KAAKC,SAAS,CAACN,MAAOI,EAAMG,OAAOP,U,0BAGrC,SAAaI,GACXI,MAAM,yBAA2BH,KAAKN,MAAMC,OAC5CI,EAAMK,mB,oBAGR,WAEE,OACE,sBAAMC,SAAUL,KAAKF,aAAcQ,UAAQ,EAACC,aAAa,MAAzD,SAEI,cAACC,EAAA,EAAD,CAAYb,MAAOK,KAAKN,MAAMC,MAAOc,SAAUT,KAAKJ,aAAcc,UAAQ,EAACC,GAAG,oBAAoBC,MAAM,wB,GAvB9EC,IAAMC,WA6B3BC,EA5Df,WACE,IAAMC,EAAU9B,IADH,EAE2B2B,IAAMI,SAAS,IAF1C,mBAIb,OAJa,UAKX,qBAAKC,UAAU,MAAf,SACG,eAACC,EAAA,EAAD,CAAevC,MAAOA,EAAtB,UACD,cAACwC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAU,CAACC,gBAAiB,WAAtD,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQR,UAAWF,EAAQW,WAAYC,MAAM,UAAUC,aAAW,OAAnF,SACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKb,UAAWF,EAAQgB,MAA5C,mCAMJ,eAACC,EAAA,EAAD,CAAKC,EAAG,GAAIC,QAAQ,mBAApB,UACE,cAACC,EAAA,EAAD,CAAQR,MAAQ,UAAhB,uEACE,sBAAMS,IAAI,aAAaC,KAAK,gFAC5B,cAAC,EAAD,aClDKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b69269c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Box from '@material-ui/core/Box';\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2574B6',\n    },\n    secondary: {\n      main: '#82b1ff',\n    },\n  },\n});\n\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: { width: '5rem', height: '5rem' },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [typeClothing, setTypeClothing] = React.useState('');\n\n  return (\n    <div className=\"App\">\n       <ThemeProvider theme={theme}>\n      <AppBar position=\"sticky\" style = { {backgroundColor: \"#2574B6\"} }>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            a fashion knomad\n          </Typography>\n          {/* <Button color=\"inherit\">Login</Button> */}\n        </Toolbar>\n      </AppBar>\n      <Box p={40} bgcolor=\"background.paper\">\n        <Button color = \"primary\" > Sustainable alternatives exist. We can find it for you. </Button>\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />    \n          <ClothingTypeInputForm />\n            {/* <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField  required id=\"standard-required\" label=\"Input the clothing article's url\" />\n            </form>    */}\n      </Box> \n      </ThemeProvider>\n    </div>\n  );\n}\n\nclass ClothingTypeInputForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    // const { classes } = this.props;\n    return (\n      <form onSubmit={this.handleSubmit} Validate autoComplete=\"off\">\n        {/* className={classes.root} */}\n          <TextField  value={this.state.value} onChange={this.handleChange} required id=\"standard-required\" label=\"Clothing Type\" />\n      </form>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}